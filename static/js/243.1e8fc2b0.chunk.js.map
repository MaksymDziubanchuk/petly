{"version":3,"file":"static/js/243.1e8fc2b0.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/newsFolder/NewsItem/newsItem.module.scss?9af5","components/newsFolder/NewsItem/NewsItem.jsx","webpack://react-homework-template/./src/components/newsFolder/NewsList/newsList.module.scss?2387","components/newsFolder/NewsList/NewsList.jsx","webpack://react-homework-template/./src/pages/NewsPage/news-page.module.scss?6ec5","webpack://react-homework-template/./src/components/newsFolder/NewsFilter/newsFilter.module.scss?354d","components/newsFolder/NewsFilter/NewsFilter.jsx","pages/NewsPage/NewsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"news_item\":\"newsItem_news_item__RUVyf\",\"news_line\":\"newsItem_news_line__w06f2\",\"news_title\":\"newsItem_news_title__A-PBR\",\"news_text\":\"newsItem_news_text__mZU19\",\"wrap_news_info\":\"newsItem_wrap_news_info__t8m3T\",\"news_date\":\"newsItem_news_date__EcVDB\",\"news_link\":\"newsItem_news_link__XJZa8\"};","import s from './newsItem.module.scss'\nimport PropTypes from 'prop-types'\nimport EllipsisText from 'react-ellipsis-text'\nimport { format } from 'date-fns'\nimport { useState, useEffect } from 'react'\nimport { useTranslation } from 'react-i18next'\n\nconst NewsItem = ({ title, url, description, date }) => {\n    const { t } = useTranslation()\n\n    const [matches, setMatches] = useState(\n        window.matchMedia('(min-width: 1280px)').matches\n    )\n    useEffect(() => {\n        window\n            .matchMedia('(min-width: 1280px)')\n            .addEventListener('change', e => setMatches(e.matches))\n    }, [])\n\n    const formatDate = format(new Date(date), 'dd/MM/yyyy')\n    const zeroDate = formatDate === '01/01/1970' ? '' : formatDate\n\n    return (\n        <li className={s.news_item}>\n            <span className={s.news_line}></span>\n            <EllipsisText\n                className={s.news_title}\n                text={title}\n                tooltip={title}\n                length={Number(`${matches ? 50 : 35}`)}\n            />\n            <EllipsisText\n                className={s.news_text}\n                text={description}\n                length={230}\n            />\n            <div className={s.wrap_news_info}>\n                <p className={s.news_date}>{zeroDate}</p>\n                <a\n                    className={s.news_link}\n                    href={url}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                >\n                    {t('NewsPage.more')}\n                </a>\n            </div>\n        </li>\n    )\n}\nexport default NewsItem\n\nNewsItem.propTypes = {\n    title: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"news_list\":\"newsList_news_list__ojSiE\"};","import NewsItem from '../NewsItem/NewsItem'\nimport s from './newsList.module.scss'\nimport { nanoid } from 'nanoid'\n\nexport default function NewsList({ data }) {\n    return (\n        <>\n            <ul className={s.news_list}>\n                {data.map(({ title, url, description, date }) => (\n                    <NewsItem\n                        key={nanoid()}\n                        title={title}\n                        url={url}\n                        description={description}\n                        date={date}\n                    />\n                ))}\n            </ul>\n        </>\n    )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"bg\":\"news-page_bg__fY7o0\",\"title\":\"news-page_title__uuWj7\"};","// extracted by mini-css-extract-plugin\nexport default {\"search\":\"newsFilter_search__NQfT5\",\"search_input\":\"newsFilter_search_input__WdDfn\",\"icon\":\"newsFilter_icon__XOSxd\"};","import PropTypes from 'prop-types'\nimport s from './newsFilter.module.scss'\nimport SvgInsert from 'components/utilsFolder/Svg/Svg'\nimport { useTranslation } from 'react-i18next'\n\nexport default function NewsFilter({\n    input,\n    onChange,\n    resetInput,\n    inputValue,\n}) {\n    const { t } = useTranslation()\n\n    return (\n        <div className={s.search}>\n            <input\n                className={s.search_input}\n                type=\"text\"\n                placeholder={t('NewsPage.search')}\n                name=\"filter\"\n                onInput={onChange}\n                value={input}\n            />\n            <div className={s.icon}>\n                {inputValue && (\n                    <div onClick={() => resetInput()}>\n                        <SvgInsert id=\"icon-reset-search\" />\n                    </div>\n                )}\n                {!inputValue && <SvgInsert id=\"icon-search-news\" />}\n            </div>\n        </div>\n    )\n}\n\nNewsFilter.propTypes = {\n    input: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n}\n","import NewsList from '../../components/newsFolder/NewsList/NewsList'\nimport s from './news-page.module.scss'\nimport sass from '../../helpers/container.module.scss'\nimport NewsFilter from '../../components/newsFolder/NewsFilter/NewsFilter'\nimport { useState, useEffect } from 'react'\nimport { format } from 'date-fns'\nimport { Notify } from 'notiflix/build/notiflix-notify-aio'\nimport { useTranslation } from 'react-i18next'\n\nconst NewsPage = () => {\n    const { t, ready } = useTranslation()\n\n    useEffect(() => {\n        if (!ready) return 'loading translations...'\n    }, [ready])\n\n    const items = t('NewsPage', { returnObjects: true })\n\n    const sortDate = arr => {\n        const formatDate = arr.map(item => ({\n            ...item,\n            date: Number(format(new Date(item.date), 'T')),\n        }))\n        const sort = formatDate.sort(function (a, b) {\n            return b.date - a.date\n        })\n        return sort\n    }\n\n    const [filter, setFilter] = useState('')\n    const [inputValue, setInputValue] = useState(false)\n\n    const handleChange = event => {\n        setFilter(event.currentTarget.value)\n    }\n\n    useEffect(() => {\n        filter.length > 0 ? setInputValue(true) : setInputValue(false)\n    }, [filter.length])\n\n    const resetInput = event => {\n        setFilter('')\n    }\n\n    function filterNews() {\n        if (!filter) {\n            return sortDate(items.NewsList)\n        }\n        const normalizedFilter = filter.toLocaleLowerCase()\n        const filterlist = items.NewsList.filter(news => {\n            return news.title.toLocaleLowerCase().includes(normalizedFilter)\n        })\n        if (filterlist.length === 0) {\n            Notify.warning(t('NewsPage.filterFalse'), {\n                distance: '100px',\n                opacity: '0.8',\n                useIcon: false,\n                fontSize: '18px',\n                borderRadius: '20px',\n                showOnlyTheLastOne: true,\n            })\n        }\n        return sortDate(filterlist)\n    }\n\n    return (\n        <div className={s.bg}>\n            <div className={sass.container}>\n                <div className={s.news}>\n                    <h1 className={s.title}>{t('NewsPage.title')}</h1>\n                    <NewsFilter\n                        input={filter}\n                        onChange={handleChange}\n                        resetInput={resetInput}\n                        inputValue={inputValue}\n                    />\n                    <NewsList data={filterNews()} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default NewsPage\n"],"names":["title","url","description","date","t","useTranslation","useState","window","matchMedia","matches","setMatches","useEffect","addEventListener","e","formatDate","format","Date","zeroDate","className","s","text","tooltip","length","Number","href","target","rel","NewsList","data","map","nanoid","NewsFilter","input","onChange","resetInput","inputValue","type","placeholder","name","onInput","value","onClick","Svg","id","ready","items","returnObjects","sortDate","arr","item","sort","a","b","filter","setFilter","setInputValue","sass","event","currentTarget","normalizedFilter","toLocaleLowerCase","filterlist","news","includes","Notify","distance","opacity","useIcon","fontSize","borderRadius","showOnlyTheLastOne","filterNews"],"sourceRoot":""}